---
import { ClientRouter } from "astro:transitions";
import { PUBLIC_GOOGLE_SITE_VERIFICATION } from "astro:env/client";
import { SITE } from "@/config";
import "@/styles/global.css";

export interface Props {
  title?: string;
  author?: string;
  profile?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
  pubDatetime?: Date;
  modDatetime?: Date | null;
  scrollSmooth?: boolean;
}

const {
  title = SITE.title,
  author = SITE.author,
  profile = SITE.profile,
  description = SITE.desc,
  ogImage = SITE.ogImage ? `/${SITE.ogImage}` : "/og.png",
  canonicalURL = new URL(Astro.url.pathname, Astro.url),
  pubDatetime,
  modDatetime,
  scrollSmooth = false,
} = Astro.props;

const socialImageURL = new URL(ogImage, Astro.url);

const structuredData = pubDatetime ? {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  headline: `${title}`,
  name: `${title}`,
  description: `${description}`,
  image: `${socialImageURL}`,
  url: `${canonicalURL}`,
  datePublished: pubDatetime.toISOString(),
  ...(modDatetime && { dateModified: modDatetime.toISOString() }),
  author: [
    {
      "@type": "Person",
      name: `${author}`,
      ...(profile && { url: profile }),
    },
  ],
  publisher: {
    "@type": "Person",
    name: `${author}`,
    ...(profile && { url: profile }),
  },
} : {
  "@context": "https://schema.org",
  "@type": ["WebPage", "ProfilePage"],
  name: `${title}`,
  description: `${description}`,
  image: `${socialImageURL}`,
  url: `${canonicalURL}`,
  mainEntity: {
    "@type": "Person",
    name: `${author}`,
    jobTitle: "Staff Integration Architect",
    worksFor: {
      "@type": "Organization",
      name: "MillerKnoll"
    },
    knowsAbout: [
      "Enterprise Integration",
      "Cloud Architecture",
      "System Modernization",
      "Event-Driven Systems",
      "API Design",
      "DevOps"
    ],
    ...(profile && { sameAs: [profile] }),
    ...(profile && { url: profile }),
  },
  author: {
    "@type": "Person",
    name: `${author}`,
    ...(profile && { url: profile }),
  }
};
---

<!doctype html>
<html
  dir={SITE.dir}
  lang=`${SITE.lang ?? "en"}`
  class={`${scrollSmooth && "scroll-smooth"}`}
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content={SITE.title} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:image:alt" content={title} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:locale" content="en_US" />

    <!-- Article Published/Modified time -->
    {
      pubDatetime && (
        <meta
          property="article:published_time"
          content={pubDatetime.toISOString()}
        />
      )
    }
    {
      modDatetime && (
        <meta
          property="article:modified_time"
          content={modDatetime.toISOString()}
        />
      )
    }

    <!-- LinkedIn and professional networks (uses Open Graph) -->
    <meta property="og:image:type" content="image/jpeg" />
    
    <!-- Additional social media platforms -->
    <meta name="pinterest-rich-pin" content="true" />
    
    <!-- WhatsApp and messaging apps -->
    <meta property="og:image:secure_url" content={socialImageURL} />
    
    <!-- Professional networking optimization -->
    <meta property="article:author" content={profile} />

    <!-- Google JSON-LD Structured data -->
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify(structuredData)}
    />

    <!-- Enable RSS feed auto-discovery  -->
    <!-- https://docs.astro.build/en/recipes/rss/#enabling-rss-feed-auto-discovery -->
    <link
      rel="alternate"
      type="application/rss+xml"
      title={SITE.title}
      href={new URL("rss.xml", Astro.site)}
    />

    <!-- Additional meta tags for better social sharing -->
    <meta name="robots" content="index, follow" />
    <meta name="googlebot" content="index, follow" />
    
    <!-- Theme color for mobile browsers -->
    <meta name="theme-color" content="#1f2937" />
    <meta name="msapplication-TileColor" content="#1f2937" />
    
    <!-- Apple touch icon -->
    <link rel="apple-touch-icon" href="/favicon.svg" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      PUBLIC_GOOGLE_SITE_VERIFICATION && (
        <meta
          name="google-site-verification"
          content={PUBLIC_GOOGLE_SITE_VERIFICATION}
        />
      )
    }

    <ClientRouter />

    <script is:inline src="/toggle-theme.js"></script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
